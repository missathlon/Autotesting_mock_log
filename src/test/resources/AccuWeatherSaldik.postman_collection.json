{
	"info": {
		"_postman_id": "461fa151-d1de-48ea-8491-24e9b29c77df",
		"name": "AccuWeatherSaldik",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24203149"
	},
	"item": [
		{
			"name": "Locations API",
			"item": [
				{
					"name": "City Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].LocalizedName).to.eql(\"Ankara\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url-weather}}/locations/v1/cities/search?q=Ankara",
							"host": [
								"{{url-weather}}"
							],
							"path": [
								"locations",
								"v1",
								"cities",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "Ankara"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "City Neighbors by locationKey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(10);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].LocalizedName).to.eql(\"Beaver Lake\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/cities/neighbors/56",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"cities",
								"neighbors",
								"56"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Area List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(7);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].LocalizedName).to.eql(\"Brest\")\r",
									"}); "
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/adminareas/by",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"adminareas",
								"by"
							]
						}
					},
					"response": []
				},
				{
					"name": "Region List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(10);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[8].LocalizedName).to.eql(\"Oceania\")\r",
									"}); "
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url-weather}}/locations/v1/regions",
							"host": [
								"{{url-weather}}"
							],
							"path": [
								"locations",
								"v1",
								"regions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Country List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(27);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].LocalizedName).to.eql(\"American Samoa\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/countries/OCN",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"countries",
								"OCN"
							]
						}
					},
					"response": []
				},
				{
					"name": "AutocompleteSearch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(10);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].LocalizedName).to.eql(\"Ankara\")\r",
									"}); \r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Key).to.eql(\"316938\")\r",
									"}); "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/cities/autocomplete?q=ankara",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"cities",
								"autocomplete"
							],
							"query": [
								{
									"key": "q",
									"value": "ankara"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search by locationKey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().LocalizedName).to.eql(\"Ankara\")\r",
									"}); "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url-weather}}/locations/v1/316938",
							"host": [
								"{{url-weather}}"
							],
							"path": [
								"locations",
								"v1",
								"316938"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Indices API",
			"item": [
				{
					"name": "1 Day of Daily Index Values for a Group of Indices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(3);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Name).to.eql(\"Fishing Forecast\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/indices/v1/daily/1day/5/groups/8",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"indices",
								"v1",
								"daily",
								"1day",
								"5",
								"groups",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 Day of Daily Index Values for a Specific Index",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(1);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Name).to.eql(\"Outdoor Concert Forecast\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/indices/v1/daily/1day/5/8",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"indices",
								"v1",
								"daily",
								"1day",
								"5",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 Day of Daily Index Values for All Indices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(48);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Name).to.eql(\"Flight Delays\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/indices/v1/daily/1day/5",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"indices",
								"v1",
								"daily",
								"1day",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 Days of Daily Index Values for a Group of Indices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(15);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Name).to.eql(\"Fishing Forecast\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/indices/v1/daily/5day/52/groups/8",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"indices",
								"v1",
								"daily",
								"5day",
								"52",
								"groups",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 Days of Daily Index Values for All Indices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(240);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Name).to.eql(\"Flight Delays\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/indices/v1/daily/5day/52",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"indices",
								"v1",
								"daily",
								"5day",
								"52"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 Days of Daily Index Values for a Specific Index",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(5);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Name).to.eql(\"Outdoor Concert Forecast\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/indices/v1/daily/5day/52/8",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"indices",
								"v1",
								"daily",
								"5day",
								"52",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "List of Daily Indices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(118);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Name).to.eql(\"Air Conditioning Index\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/indices/v1/daily",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"indices",
								"v1",
								"daily"
							]
						}
					},
					"response": []
				},
				{
					"name": "List of Index Groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(47);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Name).to.eql(\"All API\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/indices/v1/daily/groups",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"indices",
								"v1",
								"daily",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "List of Indices in a Specific Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(3);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Name).to.eql(\"Fishing Forecast\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/indices/v1/daily/groups/8",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"indices",
								"v1",
								"daily",
								"groups",
								"8"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Current Conditions API",
			"item": [
				{
					"name": "Current Conditions API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(1);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].MobileLink).to.eql(\"http://www.accuweather.com/en/jp/oga-shi/16/current-weather/16?lang=en-us\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/currentconditions/v1/15",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"currentconditions",
								"v1",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "Historical Current Conditions (past 24 hours)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(24);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].MobileLink).to.eql(\"http://www.accuweather.com/en/gr/logos/2285860/current-weather/2285860?lang=en-us\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/currentconditions/v1/5/historical/24",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"currentconditions",
								"v1",
								"5",
								"historical",
								"24"
							]
						}
					},
					"response": []
				},
				{
					"name": "Historical Current Conditions (past 6 hours) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(6);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Link).to.eql(\"http://www.accuweather.com/en/gr/logos/2285860/current-weather/2285860?lang=en-us\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/currentconditions/v1/5/historical",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"currentconditions",
								"v1",
								"5",
								"historical"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "15 Days",
			"item": [
				{
					"name": "15 Days of Weather Alarms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Api Authorization failed\")\r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/alarms/v1/15day//290421",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"alarms",
								"v1",
								"15day",
								"",
								"290421"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "in",
				"value": "query",
				"type": "string"
			},
			{
				"key": "key",
				"value": "apikey",
				"type": "string"
			},
			{
				"key": "value",
				"value": "vU3yjDZtkiO8GCrGgfI6AApccY4AiMfn",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apikey",
			"value": "vU3yjDZtkiO8GCrGgfI6AApccY4AiMfn",
			"type": "string"
		},
		{
			"key": "url-weather",
			"value": "http://dataservice.accuweather.com",
			"type": "string"
		}
	]
}